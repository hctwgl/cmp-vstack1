---

- hosts: "{{host}}"
  vars:
    - virtenv_path: "{{zstack_root}}/virtualenv/virtualrouter/"
    - vr_root: "{{zstack_root}}/virtualrouter"
    - file_root: "files/virtualrouter"
    - pip_url: "{{pypi_url|default('https://pypi.python.org/simple/')}}"
    - proxy: "{{http_proxy|default()}}"
    - sproxy: "{{https_proxy|default()}}"
    - chroot_env: "{{chroot|default('false')}}"
    - yum_repos: "{{yum_repo|default('false')}}"

  tasks:
    - include: zstacklib.yaml

    - name: create root directories
      shell: "mkdir -p {{item}}"
      with_items:
        - "{{vr_root}}"
        - "{{virtenv_path}}"

    - name: install virtual router related packages for RedHat
      yum: name="{{item}}"
      with_items:
        - haproxy
        - dnsmasq
      when: ansible_os_family == "RedHat" and yum_repos == 'false'

    - name: install appliance vm related packages on RedHat based OS from user defined repo
      when: ansible_os_family == 'RedHat' and yum_repos != 'false'
      shell: "yum --disablerepo=* --enablerepo={{yum_repos}} --nogpgcheck install -y haproxy dnsmasq"

    - name: install virtual router related packages for Debian
      apt: name=dnsmasq
      when: ansible_os_family == "Debian"

    - shell: virtualenv --version | grep "12.1.1"
      register: virtualenv_ret
      ignore_errors: True

    - name: install virtualenv
      pip: name=virtualenv version=12.1.1 extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}"
      when: virtualenv_ret.rc != 0

    - name: create virtualenv
      shell: "rm -rf {{virtenv_path}} && rm -f {{vr_root}}/{{pkg_zstacklib}} && rm -f {{vr_root}}/{{pkg_virtualrouter}} && virtualenv {{virtenv_path}}"

    - name: create dnsmasq host dhcp file
      shell: /bin/touch /etc/hosts.dhcp

    - name: create dnsmasq host option file
      shell: /bin/touch /etc/hosts.option

    - name: create dnsmasq host dns file
      shell: /bin/touch /etc/hosts.dns

    - name: copy sysctl.conf
      copy: src="{{file_root}}/sysctl.conf" dest=/etc/sysctl.conf

    - name: copy dnsmasq conf file
      copy: src="{{file_root}}/dnsmasq.conf" dest=/etc/dnsmasq.conf

    - name: enable dnsmasq service
      service: name=dnsmasq enabled=yes state=started
      when: chroot_env == 'false'

    - name: copy zstacklib
      copy: src="files/zstacklib/{{pkg_zstacklib}}" dest="{{vr_root}}/{{pkg_zstacklib}}"
      notify:
        - install zstacklib

    - name: copy virtual router
      copy: src="{{file_root}}/{{pkg_virtualrouter}}" dest="{{vr_root}}/{{pkg_virtualrouter}}"
      notify:
        - install vr

    - name: copy virtual rourte service file
      copy: src="{{file_root}}/zstack-virtualrouter" dest=/etc/init.d/ mode=755

    - meta: flush_handlers

    - name: restart vr
      service: name=zstack-virtualrouter enabled=yes state=restarted
      when: chroot_env == 'false' 

    - name: enable virtual router service for RedHat on chroot
      service: name=zstack-virtualrouter enabled=yes state=stopped
      when: chroot_env != 'false' and ansible_os_family == 'RedHat'

    - name: enable virtual rotuer service for Debian -1
      command: sed -i '/zstack-virtualrouter start/d' /etc/rc.local 
      when: ansible_os_family == 'Debian'

    - name: enable virtual rotuer service for Debian -2
      command: sed -i 's/^exit 0/\/etc\/init.d\/zstack-virtualrouter start\nexit 0/' /etc/rc.local
      when: ansible_os_family == 'Debian'

    - name: restart dnsmasq
      service: name=dnsmasq state=restarted enabled=yes
      when: chroot_env == 'false'

  handlers:
    - name: install zstacklib
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{sproxy}}"
      pip: name="{{vr_root}}/{{pkg_zstacklib}}" extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}" virtualenv="{{virtenv_path}}" virtualenv_site_packages=yes

    - name: install vr
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{sproxy}}"
      pip: name="{{vr_root}}/{{pkg_virtualrouter}}" extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}" virtualenv="{{virtenv_path}}"

